#!/usr/bin/env python

import numpy as np
import cv2
import rospy
from std_msgs.msg import String
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
from python_ball_detector import identify_item

def video_capture(msg):
    print "INSIDE VIDEO CAPTURE...."
    bridge = CvBridge()
    try:	
        cv_image = bridge.imgmsg_to_cv2(msg, msg.encoding)
	cv2.waitKey(0)
    except CvBridgeError as e:
	print (e)
	cv2.waitKey(0)
        cv2.destroyAllWindows()
    identify_item.identify(cv_image)

def eventin_cb(msg):
    print "INSIDE EVENT_IN...."
    print "Message: %s" %msg.data 
    if msg.data == 'e_stop':
        print "Stop processing"        
    elif msg.data == 'e_start':
        print "Start processing the image"
        #eventin_image = rospy.Subscriber("/usb_cam/image_raw", Image,video_capture)	
	identify_item.identify()
    else:
	print "DO NOTHING"
        
def initialize_node():
    rospy.init_node('sub_ball_detector_node', anonymous=False)    
    rospy.loginfo("ball_detector_node is now running")
    eventin_sub = rospy.Subscriber("/ball_detector_node/event_out", String, eventin_cb)
    rospy.spin()

if __name__ == '__main__':
    initialize_node()

